{"remainingRequest":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaosh/github/wdh-pmp/ruoyi-ui/src/components/ImagePreview/index.vue?vue&type=style&index=0&id=4b9dcf40&lang=scss&scoped=true&","dependencies":[{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/src/components/ImagePreview/index.vue","mtime":1645289502000},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/css-loader/dist/cjs.js","mtime":1646568387531},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1646568388622},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/postcss-loader/src/index.js","mtime":1646568387806},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/sass-loader/dist/cjs.js","mtime":1646568387001},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/cache-loader/dist/cjs.js","mtime":1646568386999},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/vue-loader/lib/index.js","mtime":1646568388147}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWltYWdlIHsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ViZWVmNTsKICBib3gtc2hhZG93OiAwIDAgNXB4IDFweCAjY2NjOwogIDo6di1kZWVwIC5lbC1pbWFnZV9faW5uZXIgewogICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAmOmhvdmVyIHsKICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpOwogICAgfQogIH0KICA6OnYtZGVlcCAuaW1hZ2Utc2xvdCB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBjb2xvcjogIzkwOTM5OTsKICAgIGZvbnQtc2l6ZTogMzBweDsKICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ImagePreview","sourcesContent":["<template>\n  <el-image\n    :src=\"`${realSrc}`\"\n    fit=\"cover\"\n    :style=\"`width:${realWidth};height:${realHeight};`\"\n    :preview-src-list=\"realSrcList\"\n  >\n    <div slot=\"error\" class=\"image-slot\">\n      <i class=\"el-icon-picture-outline\"></i>\n    </div>\n  </el-image>\n</template>\n\n<script>\nexport default {\n  name: \"ImagePreview\",\n  props: {\n    src: {\n      type: String,\n      required: true\n    },\n    width: {\n      type: [Number, String],\n      default: \"\"\n    },\n    height: {\n      type: [Number, String],\n      default: \"\"\n    }\n  },\n  computed: {\n    realSrc() {\n      let real_src = this.src.split(\",\")[0];\n      return real_src;\n    },\n    realSrcList() {\n      let real_src_list = this.src.split(\",\");\n      let srcList = [];\n      real_src_list.forEach(item => {\n        return srcList.push(item);\n      });\n      return srcList;\n    },\n    realWidth() {\n      return typeof this.width == \"string\" ? this.width : `${this.width}px`;\n    },\n    realHeight() {\n      return typeof this.height == \"string\" ? this.height : `${this.height}px`;\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.el-image {\n  border-radius: 5px;\n  background-color: #ebeef5;\n  box-shadow: 0 0 5px 1px #ccc;\n  ::v-deep .el-image__inner {\n    transition: all 0.3s;\n    cursor: pointer;\n    &:hover {\n      transform: scale(1.2);\n    }\n  }\n  ::v-deep .image-slot {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    color: #909399;\n    font-size: 30px;\n  }\n}\n</style>\n"]}]}
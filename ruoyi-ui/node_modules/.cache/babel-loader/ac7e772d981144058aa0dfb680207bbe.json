{"remainingRequest":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/babel-loader/lib/index.js!/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhaosh/github/wdh-pmp/ruoyi-ui/src/utils/dict/DictConverter.js","dependencies":[{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/src/utils/dict/DictConverter.js","mtime":1645289502000},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/babel.config.js","mtime":1645289502000},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/cache-loader/dist/cjs.js","mtime":1646568386999},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/babel-loader/lib/index.js","mtime":1646568387812},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1646568387151}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCIvVXNlcnMvemhhb3NoL2dpdGh1Yi93ZGgtcG1wL3J1b3lpLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIik7Cgp2YXIgX3RvQ29uc3VtYWJsZUFycmF5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiL1VzZXJzL3poYW9zaC9naXRodWIvd2RoLXBtcC9ydW95aS11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b0NvbnN1bWFibGVBcnJheS5qcyIpKTsKCnZhciBfRGljdE9wdGlvbnMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vRGljdE9wdGlvbnMiKSk7Cgp2YXIgX0RpY3REYXRhID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL0RpY3REYXRhIikpOwoKZnVuY3Rpb24gX2RlZmF1bHQoZGljdCwgZGljdE1ldGEpIHsKICB2YXIgbGFiZWwgPSBkZXRlcm1pbmVEaWN0RmllbGQuYXBwbHkodm9pZCAwLCBbZGljdCwgZGljdE1ldGEubGFiZWxGaWVsZF0uY29uY2F0KCgwLCBfdG9Db25zdW1hYmxlQXJyYXkyLmRlZmF1bHQpKF9EaWN0T3B0aW9ucy5kZWZhdWx0LkRFRkFVTFRfTEFCRUxfRklFTERTKSkpOwogIHZhciB2YWx1ZSA9IGRldGVybWluZURpY3RGaWVsZC5hcHBseSh2b2lkIDAsIFtkaWN0LCBkaWN0TWV0YS52YWx1ZUZpZWxkXS5jb25jYXQoKDAsIF90b0NvbnN1bWFibGVBcnJheTIuZGVmYXVsdCkoX0RpY3RPcHRpb25zLmRlZmF1bHQuREVGQVVMVF9WQUxVRV9GSUVMRFMpKSk7CiAgcmV0dXJuIG5ldyBfRGljdERhdGEuZGVmYXVsdChkaWN0W2xhYmVsXSwgZGljdFt2YWx1ZV0sIGRpY3QpOwp9Ci8qKg0KICog56Gu5a6a5a2X5YW45a2X5q61DQogKiBAcGFyYW0ge0RpY3REYXRhfSBkaWN0DQogKiBAcGFyYW0gIHsuLi5TdHJpbmd9IGZpZWxkcw0KICovCgoKZnVuY3Rpb24gZGV0ZXJtaW5lRGljdEZpZWxkKGRpY3QpIHsKICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgZmllbGRzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgIGZpZWxkc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07CiAgfQoKICByZXR1cm4gZmllbGRzLmZpbmQoZnVuY3Rpb24gKGYpIHsKICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZGljdCwgZik7CiAgfSk7Cn0="},{"version":3,"sources":["/Users/zhaosh/github/wdh-pmp/ruoyi-ui/src/utils/dict/DictConverter.js"],"names":["dict","dictMeta","label","determineDictField","labelField","DictOptions","DEFAULT_LABEL_FIELDS","value","valueField","DEFAULT_VALUE_FIELDS","DictData","fields","find","f","Object","prototype","hasOwnProperty","call"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEe,kBAASA,IAAT,EAAeC,QAAf,EAAyB;AACtC,MAAMC,KAAK,GAAGC,kBAAkB,MAAlB,UAAmBH,IAAnB,EAAyBC,QAAQ,CAACG,UAAlC,0CAAiDC,qBAAYC,oBAA7D,GAAd;AACA,MAAMC,KAAK,GAAGJ,kBAAkB,MAAlB,UAAmBH,IAAnB,EAAyBC,QAAQ,CAACO,UAAlC,0CAAiDH,qBAAYI,oBAA7D,GAAd;AACA,SAAO,IAAIC,iBAAJ,CAAaV,IAAI,CAACE,KAAD,CAAjB,EAA0BF,IAAI,CAACO,KAAD,CAA9B,EAAuCP,IAAvC,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASG,kBAAT,CAA4BH,IAA5B,EAA6C;AAAA,oCAARW,MAAQ;AAARA,IAAAA,MAAQ;AAAA;;AAC3C,SAAOA,MAAM,CAACC,IAAP,CAAY,UAAAC,CAAC;AAAA,WAAIC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCjB,IAArC,EAA2Ca,CAA3C,CAAJ;AAAA,GAAb,CAAP;AACD","sourcesContent":["import DictOptions from './DictOptions'\r\nimport DictData from './DictData'\r\n\r\nexport default function(dict, dictMeta) {\r\n  const label = determineDictField(dict, dictMeta.labelField, ...DictOptions.DEFAULT_LABEL_FIELDS)\r\n  const value = determineDictField(dict, dictMeta.valueField, ...DictOptions.DEFAULT_VALUE_FIELDS)\r\n  return new DictData(dict[label], dict[value], dict)\r\n}\r\n\r\n/**\r\n * 确定字典字段\r\n * @param {DictData} dict\r\n * @param  {...String} fields\r\n */\r\nfunction determineDictField(dict, ...fields) {\r\n  return fields.find(f => Object.prototype.hasOwnProperty.call(dict, f))\r\n}\r\n"]}]}
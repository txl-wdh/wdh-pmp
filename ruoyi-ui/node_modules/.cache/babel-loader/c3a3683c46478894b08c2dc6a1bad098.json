{"remainingRequest":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/babel-loader/lib/index.js!/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhaosh/github/wdh-pmp/ruoyi-ui/src/utils/request.js","dependencies":[{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/src/utils/request.js","mtime":1645289502000},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/babel.config.js","mtime":1645289502000},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/cache-loader/dist/cjs.js","mtime":1646568386999},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/babel-loader/lib/index.js","mtime":1646568387812},{"path":"/Users/zhaosh/github/wdh-pmp/ruoyi-ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1646568387151}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/zhaosh/github/wdh-pmp/ruoyi-ui/src/utils/request.js"],"names":["downloadLoadingInstance","isRelogin","show","axios","defaults","headers","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","isToken","isRepeatSubmit","repeatSubmit","method","params","url","slice","requestObj","data","JSON","stringify","time","Date","getTime","sessionObj","cache","session","getJSON","undefined","setJSON","s_url","s_data","s_time","interval","message","console","warn","Promise","reject","Error","error","log","response","res","code","msg","errorCode","responseType","MessageBox","confirm","confirmButtonText","cancelButtonText","type","then","store","dispatch","location","href","catch","Notification","title","includes","substr","length","duration","download","filename","Loading","text","spinner","background","post","transformRequest","isLogin","blob","Blob","resText","rspObj","parse","errMsg","Message","close","r"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { Notification, MessageBox, Message, Loading } from 'element-ui'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\nimport errorCode from '@/utils/errorCode'\r\nimport { tansParams, blobValidate } from \"@/utils/ruoyi\";\r\nimport cache from '@/plugins/cache'\r\nimport { saveAs } from 'file-saver'\r\n\r\nlet downloadLoadingInstance;\r\n// 是否显示重新登录\r\nexport let isRelogin = { show: false };\r\n\r\naxios.defaults.headers['Content-Type'] = 'application/json;charset=utf-8'\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  // axios中请求配置有baseURL选项，表示请求URL公共部分\r\n  baseURL: process.env.VUE_APP_BASE_API,\r\n  // 超时\r\n  timeout: 10000\r\n})\r\n\r\n// request拦截器\r\nservice.interceptors.request.use(config => {\r\n  // 是否需要设置 token\r\n  const isToken = (config.headers || {}).isToken === false\r\n  // 是否需要防止数据重复提交\r\n  const isRepeatSubmit = (config.headers || {}).repeatSubmit === false\r\n  if (getToken() && !isToken) {\r\n    config.headers['Authorization'] = 'Bearer ' + getToken() // 让每个请求携带自定义token 请根据实际情况自行修改\r\n  }\r\n  // get请求映射params参数\r\n  if (config.method === 'get' && config.params) {\r\n    let url = config.url + '?' + tansParams(config.params);\r\n    url = url.slice(0, -1);\r\n    config.params = {};\r\n    config.url = url;\r\n  }\r\n  if (!isRepeatSubmit && (config.method === 'post' || config.method === 'put')) {\r\n    const requestObj = {\r\n      url: config.url,\r\n      data: typeof config.data === 'object' ? JSON.stringify(config.data) : config.data,\r\n      time: new Date().getTime()\r\n    }\r\n    const sessionObj = cache.session.getJSON('sessionObj')\r\n    if (sessionObj === undefined || sessionObj === null || sessionObj === '') {\r\n      cache.session.setJSON('sessionObj', requestObj)\r\n    } else {\r\n      const s_url = sessionObj.url;                  // 请求地址\r\n      const s_data = sessionObj.data;                // 请求数据\r\n      const s_time = sessionObj.time;                // 请求时间\r\n      const interval = 1000;                         // 间隔时间(ms)，小于此时间视为重复提交\r\n      if (s_data === requestObj.data && requestObj.time - s_time < interval && s_url === requestObj.url) {\r\n        const message = '数据正在处理，请勿重复提交';\r\n        console.warn(`[${s_url}]: ` + message)\r\n        return Promise.reject(new Error(message))\r\n      } else {\r\n        cache.session.setJSON('sessionObj', requestObj)\r\n      }\r\n    }\r\n  }\r\n  return config\r\n}, error => {\r\n    console.log(error)\r\n    Promise.reject(error)\r\n})\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(res => {\r\n    // 未设置状态码则默认成功状态\r\n    const code = res.data.code || 200;\r\n    // 获取错误信息\r\n    const msg = errorCode[code] || res.data.msg || errorCode['default']\r\n    // 二进制数据则直接返回\r\n    if(res.request.responseType ===  'blob' || res.request.responseType ===  'arraybuffer'){\r\n      return res.data\r\n    }\r\n    if (code === 401) {\r\n      if (!isRelogin.show) {\r\n        isRelogin.show = true;\r\n        MessageBox.confirm('登录状态已过期，您可以继续留在该页面，或者重新登录', '系统提示', {\r\n          confirmButtonText: '重新登录',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).then(() => {\r\n        isRelogin.show = false;\r\n        store.dispatch('LogOut').then(() => {\r\n          location.href = '/index';\r\n        })\r\n      }).catch(() => {\r\n        isRelogin.show = false;\r\n      });\r\n    }\r\n      return Promise.reject('无效的会话，或者会话已过期，请重新登录。')\r\n    } else if (code === 500) {\r\n      Message({\r\n        message: msg,\r\n        type: 'error'\r\n      })\r\n      return Promise.reject(new Error(msg))\r\n    } else if (code !== 200) {\r\n      Notification.error({\r\n        title: msg\r\n      })\r\n      return Promise.reject('error')\r\n    } else {\r\n      return res.data\r\n    }\r\n  },\r\n  error => {\r\n    console.log('err' + error)\r\n    let { message } = error;\r\n    if (message == \"Network Error\") {\r\n      message = \"后端接口连接异常\";\r\n    }\r\n    else if (message.includes(\"timeout\")) {\r\n      message = \"系统接口请求超时\";\r\n    }\r\n    else if (message.includes(\"Request failed with status code\")) {\r\n      message = \"系统接口\" + message.substr(message.length - 3) + \"异常\";\r\n    }\r\n    Message({\r\n      message: message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 通用下载方法\r\nexport function download(url, params, filename) {\r\n  downloadLoadingInstance = Loading.service({ text: \"正在下载数据，请稍候\", spinner: \"el-icon-loading\", background: \"rgba(0, 0, 0, 0.7)\", })\r\n  return service.post(url, params, {\r\n    transformRequest: [(params) => { return tansParams(params) }],\r\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n    responseType: 'blob'\r\n  }).then(async (data) => {\r\n    const isLogin = await blobValidate(data);\r\n    if (isLogin) {\r\n      const blob = new Blob([data])\r\n      saveAs(blob, filename)\r\n    } else {\r\n      const resText = await data.text();\r\n      const rspObj = JSON.parse(resText);\r\n      const errMsg = errorCode[rspObj.code] || rspObj.msg || errorCode['default']\r\n      Message.error(errMsg);\r\n    }\r\n    downloadLoadingInstance.close();\r\n  }).catch((r) => {\r\n    console.error(r)\r\n    Message.error('下载文件出现错误，请联系管理员！')\r\n    downloadLoadingInstance.close();\r\n  })\r\n}\r\n\r\nexport default service\r\n"]}]}